[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["nkl708 <nklnsk708@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

django = "*"
django-stubs = "*"
djangorestframework = "*"
djangorestframework-stubs = "*"
djangorestframework-simplejwt = "*"
django-cors-headers = "*"

python-dotenv = "*"
psycopg2-binary = "*"
sentry-sdk = "*"
gunicorn = "*"

feedparser = "*"
beautifulsoup4 = "*"
types-beautifulsoup4 = "*"
g4f = "*"
celery = { version = "*", extras = ["redis", "beat"] }
celery-types = "*"
redis = "*"
types-redis = "*"
PyYAML = "*"
pytz = "*"
types-pytz = "*"

[tool.poetry.dev-dependencies]
ruff = "*"
mypy = "*"
bandit = "*"

black = "*"
isort = "*"

pytest = "*"
pytest-mock = "*"
pytest-django = "*"
pytest-cov = "*"
coverage = "*"
factory-boy = "*"
freezegun = "*"
types-freezegun = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".venv"]
line-length = 79

[tool.mypy]
exclude = [".venv/"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "factory.*"
ignore_missing_imports = true

[tool.black]
line-length = 79
exclude = ".venv"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--tb=short --cov=api"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
omit = [
    "api/migrations/*",
    "api/tests/*",
    "*__init__.py",
    "api/apps.py",
    "api/admin.py",
    "api/tasks.py",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
